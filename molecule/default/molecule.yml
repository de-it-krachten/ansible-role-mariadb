---
dependency:
  name: galaxy
driver:
  name: docker
lint: |
  set -e
  yamllint .
  ansible-lint
platforms:
#  - name: mariadb-centos8
#    image: "geerlingguy/docker-centos8-ansible:latest"
#    dockerfile: Dockerfile.centos8.j2
#    command: ${MOLECULE_DOCKER_COMMAND:-""}
#    volumes:
#      - /sys/fs/cgroup:/sys/fs/cgroup:ro
#    privileged: true 
#    pre_build_image: true
#    packages: ['bash']
  - name: mariadb-ubuntu2004
    image: "geerlingguy/docker-ubuntu2004-ansible:latest"
    dockerfile: Dockerfile.ubuntu2004.j2
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true 
    pre_build_image: true
    packages: ['python3', 'sudo', 'bash', 'ca-certificates', 'iproute2', 'python3-apt', 'aptitude']
#  - name: mariadb-debian11
#    image: "geerlingguy/docker-debian11-ansible:latest"
#    dockerfile: Dockerfile.debian11.j2
#    command: ${MOLECULE_DOCKER_COMMAND:-""}
#    volumes:
#      - /sys/fs/cgroup:/sys/fs/cgroup:ro
#    privileged: true 
#    pre_build_image: true
#    packages: ['python3', 'sudo', 'bash', 'ca-certificates', 'iproute2', 'python3-apt', 'aptitude']
provisioner:
  name: ansible
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-playbook.yml}
  inventory:
    host_vars:
      mariadb-centos8:
        ansible_python_interpreter: /usr/libexec/platform-python
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
